// Code generated by smithy-go-codegen DO NOT EDIT.

package types_test

import (
	"fmt"
	"github.com/aws/aws-sdk-go-v2/service/bedrock/types"
)

func ExampleAutomatedEvaluationCustomMetricSource_outputUsage() {
	var union types.AutomatedEvaluationCustomMetricSource
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedEvaluationCustomMetricSourceMemberCustomMetricDefinition:
		_ = v.Value // Value is types.CustomMetricDefinition

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.CustomMetricDefinition

func ExampleAutomatedReasoningCheckFinding_outputUsage() {
	var union types.AutomatedReasoningCheckFinding
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningCheckFindingMemberImpossible:
		_ = v.Value // Value is types.AutomatedReasoningCheckImpossibleFinding

	case *types.AutomatedReasoningCheckFindingMemberInvalid:
		_ = v.Value // Value is types.AutomatedReasoningCheckInvalidFinding

	case *types.AutomatedReasoningCheckFindingMemberNoTranslations:
		_ = v.Value // Value is types.AutomatedReasoningCheckNoTranslationsFinding

	case *types.AutomatedReasoningCheckFindingMemberSatisfiable:
		_ = v.Value // Value is types.AutomatedReasoningCheckSatisfiableFinding

	case *types.AutomatedReasoningCheckFindingMemberTooComplex:
		_ = v.Value // Value is types.AutomatedReasoningCheckTooComplexFinding

	case *types.AutomatedReasoningCheckFindingMemberTranslationAmbiguous:
		_ = v.Value // Value is types.AutomatedReasoningCheckTranslationAmbiguousFinding

	case *types.AutomatedReasoningCheckFindingMemberValid:
		_ = v.Value // Value is types.AutomatedReasoningCheckValidFinding

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningCheckImpossibleFinding
var _ *types.AutomatedReasoningCheckNoTranslationsFinding
var _ *types.AutomatedReasoningCheckTooComplexFinding
var _ *types.AutomatedReasoningCheckValidFinding
var _ *types.AutomatedReasoningCheckInvalidFinding
var _ *types.AutomatedReasoningCheckTranslationAmbiguousFinding
var _ *types.AutomatedReasoningCheckSatisfiableFinding

func ExampleAutomatedReasoningPolicyAnnotation_outputUsage() {
	var union types.AutomatedReasoningPolicyAnnotation
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyAnnotationMemberAddRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddRuleAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberAddRuleFromNaturalLanguage:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddRuleFromNaturalLanguageAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberAddType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddTypeAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberAddVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddVariableAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberDeleteRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteRuleAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberDeleteType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteTypeAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberDeleteVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteVariableAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberIngestContent:
		_ = v.Value // Value is types.AutomatedReasoningPolicyIngestContentAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberUpdateFromRulesFeedback:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateFromRuleFeedbackAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberUpdateFromScenarioFeedback:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateFromScenarioFeedbackAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberUpdateRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateRuleAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberUpdateType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateTypeAnnotation

	case *types.AutomatedReasoningPolicyAnnotationMemberUpdateVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateVariableAnnotation

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyUpdateFromScenarioFeedbackAnnotation
var _ *types.AutomatedReasoningPolicyDeleteRuleAnnotation
var _ *types.AutomatedReasoningPolicyAddRuleFromNaturalLanguageAnnotation
var _ *types.AutomatedReasoningPolicyDeleteTypeAnnotation
var _ *types.AutomatedReasoningPolicyUpdateTypeAnnotation
var _ *types.AutomatedReasoningPolicyAddRuleAnnotation
var _ *types.AutomatedReasoningPolicyUpdateVariableAnnotation
var _ *types.AutomatedReasoningPolicyUpdateFromRuleFeedbackAnnotation
var _ *types.AutomatedReasoningPolicyAddTypeAnnotation
var _ *types.AutomatedReasoningPolicyAddVariableAnnotation
var _ *types.AutomatedReasoningPolicyIngestContentAnnotation
var _ *types.AutomatedReasoningPolicyDeleteVariableAnnotation
var _ *types.AutomatedReasoningPolicyUpdateRuleAnnotation

func ExampleAutomatedReasoningPolicyBuildResultAssets_outputUsage() {
	var union types.AutomatedReasoningPolicyBuildResultAssets
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyBuildResultAssetsMemberBuildLog:
		_ = v.Value // Value is types.AutomatedReasoningPolicyBuildLog

	case *types.AutomatedReasoningPolicyBuildResultAssetsMemberPolicyDefinition:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDefinition

	case *types.AutomatedReasoningPolicyBuildResultAssetsMemberQualityReport:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDefinitionQualityReport

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyBuildLog
var _ *types.AutomatedReasoningPolicyDefinitionQualityReport
var _ *types.AutomatedReasoningPolicyDefinition

func ExampleAutomatedReasoningPolicyBuildStepContext_outputUsage() {
	var union types.AutomatedReasoningPolicyBuildStepContext
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyBuildStepContextMemberMutation:
		_ = v.Value // Value is types.AutomatedReasoningPolicyMutation

	case *types.AutomatedReasoningPolicyBuildStepContextMemberPlanning:
		_ = v.Value // Value is types.AutomatedReasoningPolicyPlanning

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyPlanning
var _ types.AutomatedReasoningPolicyMutation

func ExampleAutomatedReasoningPolicyDefinitionElement_outputUsage() {
	var union types.AutomatedReasoningPolicyDefinitionElement
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyDefinitionElementMemberPolicyDefinitionRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDefinitionRule

	case *types.AutomatedReasoningPolicyDefinitionElementMemberPolicyDefinitionType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDefinitionType

	case *types.AutomatedReasoningPolicyDefinitionElementMemberPolicyDefinitionVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDefinitionVariable

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyDefinitionRule
var _ *types.AutomatedReasoningPolicyDefinitionType
var _ *types.AutomatedReasoningPolicyDefinitionVariable

func ExampleAutomatedReasoningPolicyMutation_outputUsage() {
	var union types.AutomatedReasoningPolicyMutation
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyMutationMemberAddRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddRuleMutation

	case *types.AutomatedReasoningPolicyMutationMemberAddType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddTypeMutation

	case *types.AutomatedReasoningPolicyMutationMemberAddVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddVariableMutation

	case *types.AutomatedReasoningPolicyMutationMemberDeleteRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteRuleMutation

	case *types.AutomatedReasoningPolicyMutationMemberDeleteType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteTypeMutation

	case *types.AutomatedReasoningPolicyMutationMemberDeleteVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteVariableMutation

	case *types.AutomatedReasoningPolicyMutationMemberUpdateRule:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateRuleMutation

	case *types.AutomatedReasoningPolicyMutationMemberUpdateType:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateTypeMutation

	case *types.AutomatedReasoningPolicyMutationMemberUpdateVariable:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateVariableMutation

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyDeleteRuleMutation
var _ *types.AutomatedReasoningPolicyUpdateTypeMutation
var _ *types.AutomatedReasoningPolicyUpdateRuleMutation
var _ *types.AutomatedReasoningPolicyAddVariableMutation
var _ *types.AutomatedReasoningPolicyAddTypeMutation
var _ *types.AutomatedReasoningPolicyUpdateVariableMutation
var _ *types.AutomatedReasoningPolicyDeleteVariableMutation
var _ *types.AutomatedReasoningPolicyAddRuleMutation
var _ *types.AutomatedReasoningPolicyDeleteTypeMutation

func ExampleAutomatedReasoningPolicyTypeValueAnnotation_outputUsage() {
	var union types.AutomatedReasoningPolicyTypeValueAnnotation
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyTypeValueAnnotationMemberAddTypeValue:
		_ = v.Value // Value is types.AutomatedReasoningPolicyAddTypeValue

	case *types.AutomatedReasoningPolicyTypeValueAnnotationMemberDeleteTypeValue:
		_ = v.Value // Value is types.AutomatedReasoningPolicyDeleteTypeValue

	case *types.AutomatedReasoningPolicyTypeValueAnnotationMemberUpdateTypeValue:
		_ = v.Value // Value is types.AutomatedReasoningPolicyUpdateTypeValue

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyAddTypeValue
var _ *types.AutomatedReasoningPolicyUpdateTypeValue
var _ *types.AutomatedReasoningPolicyDeleteTypeValue

func ExampleAutomatedReasoningPolicyWorkflowTypeContent_outputUsage() {
	var union types.AutomatedReasoningPolicyWorkflowTypeContent
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AutomatedReasoningPolicyWorkflowTypeContentMemberDocuments:
		_ = v.Value // Value is []types.AutomatedReasoningPolicyBuildWorkflowDocument

	case *types.AutomatedReasoningPolicyWorkflowTypeContentMemberPolicyRepairAssets:
		_ = v.Value // Value is types.AutomatedReasoningPolicyBuildWorkflowRepairContent

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedReasoningPolicyBuildWorkflowRepairContent
var _ []types.AutomatedReasoningPolicyBuildWorkflowDocument

func ExampleCustomizationConfig_outputUsage() {
	var union types.CustomizationConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.CustomizationConfigMemberDistillationConfig:
		_ = v.Value // Value is types.DistillationConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.DistillationConfig

func ExampleEndpointConfig_outputUsage() {
	var union types.EndpointConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EndpointConfigMemberSageMaker:
		_ = v.Value // Value is types.SageMakerEndpoint

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.SageMakerEndpoint

func ExampleEvaluationConfig_outputUsage() {
	var union types.EvaluationConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EvaluationConfigMemberAutomated:
		_ = v.Value // Value is types.AutomatedEvaluationConfig

	case *types.EvaluationConfigMemberHuman:
		_ = v.Value // Value is types.HumanEvaluationConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AutomatedEvaluationConfig
var _ *types.HumanEvaluationConfig

func ExampleEvaluationDatasetLocation_outputUsage() {
	var union types.EvaluationDatasetLocation
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EvaluationDatasetLocationMemberS3Uri:
		_ = v.Value // Value is string

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *string

func ExampleEvaluationInferenceConfig_outputUsage() {
	var union types.EvaluationInferenceConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EvaluationInferenceConfigMemberModels:
		_ = v.Value // Value is []types.EvaluationModelConfig

	case *types.EvaluationInferenceConfigMemberRagConfigs:
		_ = v.Value // Value is []types.RAGConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.EvaluationModelConfig
var _ []types.RAGConfig

func ExampleEvaluationModelConfig_outputUsage() {
	var union types.EvaluationModelConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EvaluationModelConfigMemberBedrockModel:
		_ = v.Value // Value is types.EvaluationBedrockModel

	case *types.EvaluationModelConfigMemberPrecomputedInferenceSource:
		_ = v.Value // Value is types.EvaluationPrecomputedInferenceSource

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.EvaluationPrecomputedInferenceSource
var _ *types.EvaluationBedrockModel

func ExampleEvaluationPrecomputedRagSourceConfig_outputUsage() {
	var union types.EvaluationPrecomputedRagSourceConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EvaluationPrecomputedRagSourceConfigMemberRetrieveAndGenerateSourceConfig:
		_ = v.Value // Value is types.EvaluationPrecomputedRetrieveAndGenerateSourceConfig

	case *types.EvaluationPrecomputedRagSourceConfigMemberRetrieveSourceConfig:
		_ = v.Value // Value is types.EvaluationPrecomputedRetrieveSourceConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.EvaluationPrecomputedRetrieveAndGenerateSourceConfig
var _ *types.EvaluationPrecomputedRetrieveSourceConfig

func ExampleEvaluatorModelConfig_outputUsage() {
	var union types.EvaluatorModelConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EvaluatorModelConfigMemberBedrockEvaluatorModels:
		_ = v.Value // Value is []types.BedrockEvaluatorModel

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.BedrockEvaluatorModel

func ExampleInferenceProfileModelSource_outputUsage() {
	var union types.InferenceProfileModelSource
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.InferenceProfileModelSourceMemberCopyFrom:
		_ = v.Value // Value is string

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *string

func ExampleInvocationLogSource_outputUsage() {
	var union types.InvocationLogSource
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.InvocationLogSourceMemberS3Uri:
		_ = v.Value // Value is string

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *string

func ExampleKnowledgeBaseConfig_outputUsage() {
	var union types.KnowledgeBaseConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.KnowledgeBaseConfigMemberRetrieveAndGenerateConfig:
		_ = v.Value // Value is types.RetrieveAndGenerateConfiguration

	case *types.KnowledgeBaseConfigMemberRetrieveConfig:
		_ = v.Value // Value is types.RetrieveConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.RetrieveConfig
var _ *types.RetrieveAndGenerateConfiguration

func ExampleModelDataSource_outputUsage() {
	var union types.ModelDataSource
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ModelDataSourceMemberS3DataSource:
		_ = v.Value // Value is types.S3DataSource

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.S3DataSource

func ExampleModelInvocationJobInputDataConfig_outputUsage() {
	var union types.ModelInvocationJobInputDataConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ModelInvocationJobInputDataConfigMemberS3InputDataConfig:
		_ = v.Value // Value is types.ModelInvocationJobS3InputDataConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.ModelInvocationJobS3InputDataConfig

func ExampleModelInvocationJobOutputDataConfig_outputUsage() {
	var union types.ModelInvocationJobOutputDataConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ModelInvocationJobOutputDataConfigMemberS3OutputDataConfig:
		_ = v.Value // Value is types.ModelInvocationJobS3OutputDataConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.ModelInvocationJobS3OutputDataConfig

func ExampleRAGConfig_outputUsage() {
	var union types.RAGConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.RAGConfigMemberKnowledgeBaseConfig:
		_ = v.Value // Value is types.KnowledgeBaseConfig

	case *types.RAGConfigMemberPrecomputedRagSourceConfig:
		_ = v.Value // Value is types.EvaluationPrecomputedRagSourceConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ types.EvaluationPrecomputedRagSourceConfig
var _ types.KnowledgeBaseConfig

func ExampleRatingScaleItemValue_outputUsage() {
	var union types.RatingScaleItemValue
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.RatingScaleItemValueMemberFloatValue:
		_ = v.Value // Value is float32

	case *types.RatingScaleItemValueMemberStringValue:
		_ = v.Value // Value is string

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *string
var _ *float32

func ExampleRequestMetadataFilters_outputUsage() {
	var union types.RequestMetadataFilters
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.RequestMetadataFiltersMemberAndAll:
		_ = v.Value // Value is []types.RequestMetadataBaseFilters

	case *types.RequestMetadataFiltersMemberEquals:
		_ = v.Value // Value is map[string]string

	case *types.RequestMetadataFiltersMemberNotEquals:
		_ = v.Value // Value is map[string]string

	case *types.RequestMetadataFiltersMemberOrAll:
		_ = v.Value // Value is []types.RequestMetadataBaseFilters

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.RequestMetadataBaseFilters
var _ map[string]string

func ExampleRerankingMetadataSelectiveModeConfiguration_outputUsage() {
	var union types.RerankingMetadataSelectiveModeConfiguration
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.RerankingMetadataSelectiveModeConfigurationMemberFieldsToExclude:
		_ = v.Value // Value is []types.FieldForReranking

	case *types.RerankingMetadataSelectiveModeConfigurationMemberFieldsToInclude:
		_ = v.Value // Value is []types.FieldForReranking

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.FieldForReranking

func ExampleRetrievalFilter_outputUsage() {
	var union types.RetrievalFilter
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.RetrievalFilterMemberAndAll:
		_ = v.Value // Value is []types.RetrievalFilter

	case *types.RetrievalFilterMemberEquals:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberGreaterThan:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberGreaterThanOrEquals:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberIn:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberLessThan:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberLessThanOrEquals:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberListContains:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberNotEquals:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberNotIn:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberOrAll:
		_ = v.Value // Value is []types.RetrievalFilter

	case *types.RetrievalFilterMemberStartsWith:
		_ = v.Value // Value is types.FilterAttribute

	case *types.RetrievalFilterMemberStringContains:
		_ = v.Value // Value is types.FilterAttribute

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.RetrievalFilter
var _ *types.FilterAttribute
